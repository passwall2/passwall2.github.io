<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://passwall2.github.io/news/article-19930.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Spring Boot当中获取request的三种方式</title>
        <meta name="description" content="本篇博客主要记录request相关知识，也是开发当中经常遇到的，感兴趣的跟小编一起学习吧！  目录    一、请求过程 二、获取request的三种方式   2.1、可以封装为静态方法 2.2、con" />
        <link rel="icon" href="/assets/website/img/passwall2/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Pass Wall2机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://passwall2.github.io/news/article-19930.htm" />
    <meta property="og:site_name" content="Pass Wall2机场订阅官网" />
    <meta property="og:title" content="Spring Boot当中获取request的三种方式" />
    <meta property="og:image" content="https://passwall2.github.io/uploads/20240825/aa0c747ed67f58e4b557c4fdfa587268.webp" />
        <meta property="og:release_date" content="2024-12-01T10:01:47" />
    <meta property="og:updated_time" content="2024-12-01T10:01:47" />
        <meta property="og:description" content="本篇博客主要记录request相关知识，也是开发当中经常遇到的，感兴趣的跟小编一起学习吧！  目录    一、请求过程 二、获取request的三种方式   2.1、可以封装为静态方法 2.2、con" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Boot当中获取request的三种方式">
    <meta name="format-detection" content="telephone=no">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://cdn.bootcdn.net">
    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://cdn.bootcdn.net">
    <link rel="dns-prefetch" href="https://use.fontawesome.com">

    <link href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:slnt,wght@-10..0,100..900&display=swap" rel="stylesheet">
    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/bootstrap-icons/1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Libraries Stylesheet -->
    <link rel="stylesheet" href="/assets/website/js/frontend/passwall2/animate/animate.min.css" />
    <link href="/assets/website/js/frontend/passwall2/lightbox/css/lightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/passwall2/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <!-- Customized Bootstrap Stylesheet -->
    <link href="/assets/website/css/passwall2/bootstrap.min.css" rel="stylesheet">
    <!-- Template Stylesheet -->
    <link href="/assets/website/css/passwall2/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BD8TLG2ND4"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BD8TLG2ND4');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Spinner Start -->
    <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- Spinner End -->
    <!-- Navbar & Hero Start -->
    <div class="container-fluid nav-bar px-0 px-lg-4 py-lg-0">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                                <a href="/" class="navbar-brand p-0">
                    <span class="text-primary mb-0">Pass Wall2</span>
                </a>
                                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                    <span class="fa fa-bars"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav mx-0 mx-lg-auto">
                                                <a href="/" class="nav-item nav-link">首页</a>
                                                <a href="/free-nodes/" class="nav-item nav-link">免费节点</a>
                                                <a href="/paid-subscribe/" class="nav-item nav-link">推荐机场</a>
                                                <a href="/news/" class="nav-item nav-link">新闻资讯</a>
                                                <a href="#" class="nav-item nav-link">关于</a>
                        <a href="#" class="nav-item nav-link">联系</a>
                    </div>
                </div>
            </nav>
        </div>
    </div>
    <!-- Navbar & Hero End -->

    <!-- Header Start -->
    <div class="container-fluid bg-breadcrumb">
        <div class="container text-center py-5" style="max-width: 900px;">
            <h1 class="text-white display-4 mb-4 wow fadeInDown" data-wow-delay="0.1s">Spring Boot当中获取request的三种方式</h1>
            <ol class="breadcrumb d-flex justify-content-center mb-0 wow fadeInDown" data-wow-delay="0.3s">
                <li class="breadcrumb-item"><a href="/">首页</a></li>
                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                <li class="breadcrumb-item active text-primary">正文</li>
            </ol>
        </div>
    </div>
    <!-- Header End -->
    <!-- FAQs Start -->
    <div class="container-fluid faq-section bg-light py-5">
        <div class="container py-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>本篇博客主要记录request相关知识，也是开发当中经常遇到的，感兴趣的跟小编一起学习吧！</p> <div class="toc"> <h3>目录</h3> <ul> <li> <ul> <li><a href="#_4" rel="nofollow">一、请求过程</a></li> <li><a href="#request_15" rel="nofollow">二、获取request的三种方式</a></li> <li> <ul> <li><a href="#21_17" rel="nofollow">2.1、可以封装为静态方法</a></li> <li><a href="#22controller_24" rel="nofollow">2.2、controller的方法里面</a></li> <li><a href="#23_32" rel="nofollow">2.3、直接注入</a></li> </ul> </li> <li><a href="#requestAPI_41" rel="nofollow">三、request常用API</a></li> <li> <ul> <li><a href="#31request_42" rel="nofollow">3.1、request路径相关</a></li> <li><a href="#32Header_72" rel="nofollow">3.2、Header相关</a></li> <li><a href="#33_81" rel="nofollow">3.3、获取请求体</a></li> <li><a href="#34_88" rel="nofollow">3.4、获取参数</a></li> <li><a href="#35_99" rel="nofollow">3.5、中文乱码</a></li> <li><a href="#36_106" rel="nofollow">3.6、转发</a></li> <li><a href="#37_115" rel="nofollow">3.7、共享数据</a></li> </ul> </li> <li><a href="#responseAPI_128" rel="nofollow">四、response常用API</a></li> <li><a href="#_155" rel="nofollow">五、常用工具类</a></li> <li> <ul> <li><a href="#51_156" rel="nofollow">5.1、封装的</a></li> <li><a href="#52Hutool_239" rel="nofollow">5.2、Hutool工具类</a></li> </ul> </li> </ul> </li> </ul> </div> <h2> <a id="_4" rel="nofollow"></a>一、请求过程</h2> <p>大概的流程：</p> <p>1、通过请求，然后访问到服务器，像java常用的服务器就是tomcat。</p> <p>2、服务器收到请求将请求参数、请求内容封装成一个request和response对象，以参数的形式传到我们的java程序。（这个在servlet最底层的接口当中就会看到的，本篇文章不过多说了，后续找时间出一篇sevlet的博客）</p> <p>3、这时候java程序就有了request和response对象，request当中包含了请求参数、session、请求路径等一些列关于调用接口的相关内容。而response就是我们对于该请求做出的请求响应。响应内容可以是各种参数，或者页面等等，最终封装到response，响应给服务器。</p> <p>4、服务器将response响应给客户端。</p> <h2> <a id="request_15" rel="nofollow"></a>二、获取request的三种方式</h2> <h3> <a id="21_17" rel="nofollow"></a>2.1、可以封装为静态方法</h3> <pre><code class="prism language-java"><span class="token class-name">ServletRequestAttributes</span> servletRequestAttributes <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> servletRequestAttributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> servletRequestAttributes<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h3> <a id="22controller_24" rel="nofollow"></a>2.2、controller的方法里面</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">//...</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="23_32" rel="nofollow"></a>2.3、直接注入</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@Autowired</span> <span class="token keyword">private</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">;</span>   <span class="token annotation punctuation">@Autowired</span> <span class="token keyword">private</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">;</span> </code></pre> <h2> <a id="requestAPI_41" rel="nofollow"></a>三、request常用API</h2> <h3> <a id="31request_42" rel="nofollow"></a>3.1、request路径相关</h3> <pre><code class="prism language-java"><span class="token comment">// 获取请求方式: GET</span> <span class="token class-name">String</span> <span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取虚拟目录(上下文目录)：虚拟路径通过在application配置当中可以配置</span> <span class="token comment">// 配置：server.servlet.context-path=/aaa</span> <span class="token class-name">String</span> <span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取Servlet路径：就是获取的controller当中配置的路径</span> <span class="token class-name">String</span> <span class="token function">getServletPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">/// 获取请求参数： id=3</span> <span class="token comment">// http://localhost:8080/aaa/test?id=3</span> <span class="token class-name">String</span> <span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取请求URI：/servletDemo/demo1</span> <span class="token comment">// 上下文路径+controller当中配置的路径</span> <span class="token class-name">String</span> <span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取完整请求路径：http://localhost:8080/aaa/test</span> <span class="token class-name">String</span> <span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取协议及版本：HTTP/1.1</span> <span class="token class-name">String</span> <span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 获取客户机的IP地址：192.168.0.0</span> <span class="token class-name">String</span> <span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <h3> <a id="32Header_72" rel="nofollow"></a>3.2、Header相关</h3> <pre><code class="prism language-java"><span class="token comment">// 获取请求头数据,通过请求头名称获取值</span> <span class="token class-name">String</span> <span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token comment">// 获取所有请求头信息</span> <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <h3> <a id="33_81" rel="nofollow"></a>3.3、获取请求体</h3> <pre><code class="prism language-java"><span class="token comment">// 获取流对象-获取字符输入流，只能操作字符数据</span> <span class="token class-name">BufferedReader</span> <span class="token function">getReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取流对象-获取字节输入流，既能操作字节也能操作字符</span> <span class="token class-name">ServletInputStream</span> <span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <h3> <a id="34_88" rel="nofollow"></a>3.4、获取参数</h3> <pre><code class="prism language-java"><span class="token comment">// 获取请求参数通用方式(根据参数名称获取参数值) username=zhangsan</span> <span class="token class-name">String</span> <span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token comment">// 获取请求参数名称获取参数值的数组 hobby=xx&amp;hobby=game</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token comment">// 获取请求参数名称(与获取请求头方法类似)</span> <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getParameterNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取所有参数的Map集合</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <h3> <a id="35_99" rel="nofollow"></a>3.5、中文乱码</h3> <p>中文乱码问题，Tomcat8 已经将GET 请求方式的乱码问题 解决了，但是POST方式的中文乱码问题 依旧存在，需要自行配置<br /> 在获取参数之前配置</p> <pre><code class="prism language-java">request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h3> <a id="36_106" rel="nofollow"></a>3.6、转发</h3> <p>浏览器像服务器发起一次请求，服务器内部实现转发，相当于执行了两个资源之间的操作。</p> <pre><code class="prism language-java"><span class="token comment">// 通过request对象获取请求转发服务器：</span> <span class="token class-name">RequestDispatcher</span> <span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用==RequestDispatcher对象来进行转发</span> <span class="token function">forward</span><span class="token punctuation">(</span><span class="token class-name">ServlertRequest</span> request<span class="token punctuation">,</span><span class="token class-name">ServletResponse</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h3> <a id="37_115" rel="nofollow"></a>3.7、共享数据</h3> <p>域对象：一个有作用范围的对象，可以在范围内共享数据<br /> request域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据</p> <pre><code class="prism language-java"><span class="token comment">// 存储数据</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token comment">// 通过键来获取值</span> <span class="token class-name">Object</span> <span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过键移除键对应的值</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> </code></pre> <h2> <a id="responseAPI_128" rel="nofollow"></a>四、response常用API</h2> <pre><code class="prism language-java"><span class="token comment">//设置状态码</span> response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置指定名称响应头的值，下面是导出的时候我们经常要设置的响应头，响应头当中还有文件的名称，也就是通过流下载文件的时候那个文件名称</span> response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> <span class="token operator">+</span> zipName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1.字符输出流</span> <span class="token class-name">PrintWriter</span> <span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 2.字节输出流（一般导出就是将文件写到字节流，然后响应response）</span> <span class="token class-name">ServletOutputStream</span> <span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 注意：在同一个Servlet，二种输出流不能同时使用，产生互斥</span> 　　 <span class="token comment">// response提供了专门负责重定向的方法</span> response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">"/项目地址/资源地址"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 指定服务器响应中文的编码方式</span> response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"GBK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 统一服务器和客户端的编码方式</span> response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 导出的时候如果需要直接通过response流导出Excel，需要和前端设置上下文类型，如下：</span> response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> <a id="_155" rel="nofollow"></a>五、常用工具类</h2> <h3> <a id="51_156" rel="nofollow"></a>5.1、封装的</h3> <pre><code class="prism language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestAttributes</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">;</span>  <span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpSession</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletUtils</span> <span class="token punctuation">{<!-- --></span>      <span class="token comment">/**      * 获取request      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HttpServletRequest</span> <span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 获取response      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HttpServletResponse</span> <span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 获取session      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HttpSession</span> <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * request和response在ServletRequestAttributes类当中      *      * @return      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ServletRequestAttributes</span> <span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">RequestAttributes</span> attributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> attributes<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 将字符串渲染到客户端(前后端分离很少会用到)      *      * @param response 渲染对象      * @param string   待渲染的字符串      * @return null      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">renderString</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> string<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 获取完整的请求路径，包括：域名，端口，上下文访问路径      * 上传图片的时候需要：服务器路径+上下文访问路径（所以封装了该方法）      *      * @return 服务地址      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token class-name">ServletUtils</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token function">getDomain</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getDomain</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">StringBuffer</span> url <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">String</span> contextPath <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="52Hutool_239" rel="nofollow"></a>5.2、Hutool工具类</h3> <p>Hutool工具类是目前最常用的工具类，他的官网写的非常好，并且API也非常好，并且全是中文的，这是重点哈哈。</p> <p>ServletUtil在线API文档:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://apidoc.gitee.com/dromara/hutool/"  rel="nofollow">https://apidoc.gitee.com/dromara/hutool/</a></p> <p>API当中包含了：</p> <ul> <li>cookie相关</li> <li>获取请求体</li> <li>header相关</li> <li>获得MultiPart表单内容</li> <li>获得请求参数、将参数转换为Bean</li> <li>以及response相关write操作</li> </ul> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-19474.htm">动物园宠物店小说（动物园 宠物）</a></p>
                                        <p>下一个：<a href="/news/article-19931.htm">掌握JavaScript中的迭代器和生成器，顺便了解一下async、await的原理</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-10-free-node-subscribe-links.htm" title="「1月10日」最高速度21.3M/S，2025年Pass Wall2每天更新免费机场订阅节点链接">「1月10日」最高速度21.3M/S，2025年Pass Wall2每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-23-node-share-links.htm" title="「11月23日」最高速度19.5M/S，2024年Pass Wall2每天更新免费机场订阅节点链接">「11月23日」最高速度19.5M/S，2024年Pass Wall2每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-24990.htm" title="猫驱虫药多少钱一次（猫驱虫药多少钱一片）">猫驱虫药多少钱一次（猫驱虫药多少钱一片）</a></li>
                        <li class="py-2"><a href="/news/article-32509.htm" title="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</a></li>
                        <li class="py-2"><a href="/news/article-31069.htm" title="男孩养猫的好处和坏处（男孩养宠物猫的好处和坏处）">男孩养猫的好处和坏处（男孩养宠物猫的好处和坏处）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-subscribe-node.htm" title="「12月18日」最高速度21.2M/S，2024年Pass Wall2每天更新免费机场订阅节点链接">「12月18日」最高速度21.2M/S，2024年Pass Wall2每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-22227.htm" title="延吉市宠物医院推荐（延吉市宠物狗）">延吉市宠物医院推荐（延吉市宠物狗）</a></li>
                        <li class="py-2"><a href="/news/article-44226.htm" title="兽用疫苗真伪查询 兽用疫苗真伪查询官网">兽用疫苗真伪查询 兽用疫苗真伪查询官网</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-free-high-speed-nodes.htm" title="「1月2日」最高速度19.5M/S，2025年Pass Wall2每天更新免费机场订阅节点链接">「1月2日」最高速度19.5M/S，2025年Pass Wall2每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-27779.htm" title="Echarts在vue中的基本使用以及常用配置">Echarts在vue中的基本使用以及常用配置</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">91</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- FAQs End -->
        <!-- Copyright Start -->
    <div class="container-fluid copyright py-4">
        <div class="container">
            <div class="row g-4 align-items-center">
                <div class="text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Pass Wall2机场订阅官网 版权所有 Powered by WordPress
                </div>
            </div>
        </div>
    </div>
    <!-- Copyright End -->
    <!-- Back to Top -->
    <a href="#" class="btn btn-primary btn-lg-square rounded-circle back-to-top"><i class="fa fa-arrow-up"></i></a>
    <!-- JavaScript Libraries -->
    <script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.0/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/wow/wow.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/easing/easing.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/waypoints/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/counterup/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/lightbox/js/lightbox.min.js"></script>
    <script src="/assets/website/js/frontend/passwall2/owlcarousel/owl.carousel.min.js"></script>
    <!-- Template Javascript -->
    <script src="/assets/website/js/frontend/passwall2/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>